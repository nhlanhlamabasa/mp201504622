@model IEnumerable<HotelSystem.SharedKernel.ViewModels.BookingViewModel>

@{
    ViewData["Title"] = "Your Bookings";
}

@functions
{
    public BookingStatus GetStatus(string status)
    {
        Enum.TryParse(status, out BookingStatus myStatus);
        return myStatus;
    }
}


<div class="row">
    <div class="col-sm-12 col-md-12">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active"><a asp-controller="Booking" asp-action="Bookings">Bookings</a></li>
        </ol>
    </div>
</div>


<h4 class="pb-1">Your Bookings</h4>


<p>
    <div class="btn-group">
        <a  asp-controller="Home" asp-action="Index" class="align-bottom btn">
        <i class=" fa fa-plus rounded bg-info text-light btn"></i>
        Add new booking</a>
    </div>
</p>

@if (Model == null)
{
    <hr />

    <div class="row">
        <div class="col text-center">
            <img src="~/images/error/web_hi_res_512.png" class="img-fluid rounded" height="200" width="100" />
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.HotelName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Arrival)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Departure)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.NumberOfGuests)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>

                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.HotelName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Arrival)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Departure)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumberOfGuests)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @switch (GetStatus(item.Status))
                                {
                                    case BookingStatus.AwaitingPayment:
                                        {
                                            <a asp-controller="Booking" asp-action="EditBooking" asp-route-Id="@item.Id">Edit |</a>
                                            <a asp-controller="Booking" asp-action="Details" asp-route-Id="@item.Id">Details |</a>
                                            <a asp-controller="Booking" asp-action="Cancel" asp-route-Id="@item.Id">Cancel</a>
                                        }
                                        break;
                                    case BookingStatus.Paid:
                                        {
                                            <a asp-controller="Booking" asp-action="Details" asp-route-Id="@item.Id">Details |</a>
                                            <a asp-controller="Booking" asp-action="Cancel" asp-route-Id="@item.Id">Cancel</a>
                                        }
                                        break;
                                    case BookingStatus.CheckedIn:
                                        {
                                            <a asp-controller="Booking" asp-action="Details" asp-route-Id="@item.Id">Details</a>
                                        }
                                        break;
                                    case BookingStatus.CheckedOut:
                                        {
                                            <a asp-controller="Booking" asp-action="Details" asp-route-Id="@item.Id">Details</a>
                                        }
                                        break;
                                    case BookingStatus.Cancelled:
                                        {
                                            <a asp-controller="Booking" asp-action="Details" asp-route-Id="@item.Id">Details</a>
                                        }
                                        break;
                                    default:
                                        {
                                            <a asp-controller="Booking" asp-action="EditBooking" asp-route-Id="@item.Id">Edit |</a>
                                            <a asp-controller="Booking" asp-action="Details" asp-route-Id="@item.Id">Details |</a>
                                            <a asp-controller="Booking" asp-action="Cancel" asp-route-Id="@item.Id">Cancel</a>
                                        }
                                        break;
                                }

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}


